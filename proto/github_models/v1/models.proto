syntax = "proto3";

package protoai.github_models.v1; // Pacote para modelos de dados do GitHub

import "google/protobuf/timestamp.proto";

// Informações básicas sobre um usuário/organização do GitHub
message GitHubUser {
  string login = 1;     // Username ou nome da organização
  int64 id = 2;         // ID numérico do GitHub
  string avatar_url = 3;
  string html_url = 4;  // Link para o perfil no GitHub
  string type = 5;      // "User" ou "Organization"
}

// Informações sobre uma licença de software
message License {
  string key = 1;       // Chave da licença (e.g., "mit", "apache-2.0")
  string name = 2;      // Nome completo (e.g., "MIT License")
  string spdx_id = 3;   // Identificador SPDX
  string url = 4;       // URL para detalhes da licença (pode ser null)
}

// Informações sobre um arquivo ou diretório dentro do repositório
message RepoContent {
  enum ContentType {
    CONTENT_TYPE_UNSPECIFIED = 0;
    FILE = 1;
    DIR = 2;
    SYMLINK = 3;
    SUBMODULE = 4;
  }
  string name = 1;         // Nome do arquivo/diretório
  string path = 2;         // Caminho completo desde a raiz
  string sha = 3;          // Hash SHA do conteúdo/objeto git
  int64 size = 4;          // Tamanho em bytes (para arquivos)
  string html_url = 5;     // Link para o arquivo/diretório no GitHub
  string download_url = 6; // Link para download (para arquivos, pode ser null)
  ContentType type = 7;    // Tipo de conteúdo (file, dir, etc.)
}

// Estrutura principal para os dados de um Repositório GitHub
// Usada dentro da resposta GetDataResponse do indexer.proto
message GitHubRepo {
  int64 id = 1;                 // ID numérico do repositório no GitHub
  string node_id = 2;           // ID global do GraphQL
  string name = 3;              // Nome curto do repositório
  string full_name = 4;         // Nome completo (e.g., "owner/repo")
  bool private = 5;             // Se o repositório é privado
  GitHubUser owner = 6;         // Informações do proprietário (usuário ou organização)
  string html_url = 7;          // Link para a página principal do repo
  string description = 8;       // Descrição do repositório
  bool fork = 9;                // Se é um fork
  string url = 10;              // URL da API para este repositório
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  google.protobuf.Timestamp pushed_at = 13;
  string git_url = 14;
  string ssh_url = 15;
  string clone_url = 16;
  string svn_url = 17;
  string homepage = 18;         // URL da página inicial do projeto (se houver)
  int64 size = 19;              // Tamanho do repositório em KB
  int64 stargazers_count = 20;  // Número de estrelas
  int64 watchers_count = 21;    // Número de watchers (igual a stargazers)
  int64 forks_count = 22;       // Número de forks
  int32 open_issues_count = 23; // Número de issues abertas
  string language = 24;         // Linguagem principal detectada
  License license = 25;         // Informações da licença (pode ser null)
  string default_branch = 26;   // Nome do branch padrão (e.g., "main", "master")
  map<string, int64> languages = 27; // Breakdown de linguagens por bytes
  repeated string topics = 28;  // Tópicos associados ao repositório
}